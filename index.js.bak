// EDIT THIS FILE TO COMPLETE ASSIGNMENT QUESTION 1
const { chromium } = require("playwright");

// I did use ChatGPT to generate this code.  Use the tools at hand to work faster and smarter.
// If you want me to make hand-crafted artisan gluten-free code, I can do that as well.
async function saveHackerNewsArticles() {
  // launch browser
  const browser = await chromium.launch({ headless: false });
  const context = await browser.newContext();
  const page = await context.newPage();

  // go to Hacker News
  await page.goto("https://news.ycombinator.com/newest");

  // Selectors for articles and their time
  const articleSelector = 'tr.athing';
  const timeSelector = 'span.age a';

  // Get the first 100 articles
  const articles = await page.$$(articleSelector);
  const articleCount = Math.min(articles.length, 100);

  let times = [];
  for (let i = 0; i < articleCount; i++)
  {
    const timeElement = await articles[i].$('~ tr td.subtext ' + timeSelector);
    const timeText = await timeElement.textContent();
    times.push(timeText.trim());
  }

  // Function to convert relative time to minutes
  function convertToMinutes(timeText)
  {
    const [value, unit] = timeText.split(' ');
    const numValue = parseInt(value, 10);
    switch(unit)
    {
      case 'minute':
      case 'minutes':
        return numValue;
      case 'hour':
      case 'hours':
        return numValue * 60;
      case 'day':
      case 'days':
        return numValue * 24 * 60;
      case 'month':
      case 'months':
        return numValue * 30 * 24 * 60; // Not every month is 30 days, but it works for this test
      case 'year':
      case 'years':
        return numValue * 365 * 24 * 60; // This does not take into account leap year, but again, for this test
      default:
        return 0;
    }
  }

  // Convert relative times to minutes and check if sorted
  let convertedTimes = times.map(convertToMinutes);
  let sorted = true;
  for (let i = 0; i < convertedTimes.length - 1; i++)
  {
    if(convertedTimes[i] > convertedTimes[i + 1])
    {
      sorted = false;
      break;
    }
  }

  if(sorted) 
  {
    console.log('The articles are sorted from newest to oldest.');
  }
  else
  {
    console.log('NOT SORTED NEWEST TO OLDEST!');
  }

//  await browser.close();
}

(async () => {
  await saveHackerNewsArticles();
})();
